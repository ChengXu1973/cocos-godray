CCEffect %{
  techniques:
  - passes:
    - vert: godray-vs:vert
      frag: godray-fs:frag
      pass: apply-godray
      depthStencilState:
        depthTest: false
        depthWrite: false
      rasterizerState:
        cullMode: none
      properties:
        godrayTexture: { value: white }
        rayColor: { value: [1, 1, 1, 0.5], editor: { type: color } }
}%

CCProgram godray-vs %{
  precision highp float;
  #include <legacy/decode-standard>
  #include <post-process/pipeline>
  #include <builtin/uniforms/cc-global>

  out vec2 v_uv;

  vec4 vert () {
    StandardVertInput In;
    CCDecode(In);
    FLIP_VULKAN_NDC(In.position);

    v_uv = a_texCoord;
    CC_HANDLE_RT_SAMPLE_FLIP(v_uv);

    return In.position;
  }
}%

CCProgram godray-fs %{
  precision highp float;

  in vec2 v_uv;

  #pragma rate inputTexture pass
  uniform sampler2D inputTexture;
  uniform sampler2D godrayTexture;

  uniform Constant {
    vec4 rayColor;
  };

  vec4 frag () {
    vec4 col = texture(inputTexture, v_uv);
    float light = texture(godrayTexture, v_uv).x;
    return vec4((col * rayColor).rgb * pow(light, rayColor.a / 0.5 ), 1.0);
  }
}%
