CCEffect %{
  techniques:
  - name: depth-8bits
    passes:
    - vert: depth-vs:vert
      frag: depth-fs:depth_8bits
      properties: &props
        mainTexture: { value: white }
  - name: depth-32bits
    passes:
    - vert: depth-vs:vert
      frag: depth-fs:depth_32bits
      properties: *props
}%

CCProgram depth-vs %{  
  precision highp float;

  #include <legacy/input>
  #include <legacy/local-batch>
  #include <builtin/uniforms/cc-global>

  out vec2 v_uv;
  out vec4 v_screenPos;

  vec4 vert () {
    vec4 position;
    CCVertInput(position);

    mat4 matWorld, matWorldIT;
    CCGetWorldMatrixFull(matWorld, matWorldIT);

    v_uv = a_texCoord;
    v_screenPos = cc_matProj * (cc_matView * matWorld) * position;
    return v_screenPos;
  }
}%

CCProgram depth-fs %{
  precision highp float;

  #include <legacy/output>
  #include <common/data/packing>

  in vec2 v_uv;
  in vec4 v_screenPos;
  uniform sampler2D mainTexture;

  vec4 depth_8bits () {
    vec4 texColor = texture(mainTexture, v_uv);
    if (texColor.a < 1.0) discard;

    float depth = v_screenPos.z / v_screenPos.w * 0.5 + 0.5;
    vec4 col = vec4(depth, depth, depth, 1.0);
    return CCFragOutput(col);
  }

  vec4 depth_32bits () {
    vec4 texColor = texture(mainTexture, v_uv);
    if (texColor.a < 1.0) discard;

    float depth = v_screenPos.z / v_screenPos.w * 0.5 + 0.5;
    vec4 col = packDepthToRGBA(depth);
    return CCFragOutput(col);
  }
}%
